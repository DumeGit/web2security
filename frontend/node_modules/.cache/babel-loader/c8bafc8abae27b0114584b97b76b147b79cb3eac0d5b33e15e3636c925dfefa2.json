{"ast":null,"code":"const csrfToken = localStorage.getItem(\"csrfToken\");\nexport async function search(data) {\n  const response = await fetch(\"https://salty-savannah-57820.herokuapp.com/book/search\", {\n    body: JSON.stringify(data),\n    credentials: \"include\",\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'X-XSRF-TOKEN': csrfToken\n    }\n  });\n  if (response.status !== 200) {\n    throw new Error(\"Not logged in\");\n  }\n  return response.json();\n}\nexport async function buy(id) {\n  const response = await fetch(`https://salty-savannah-57820.herokuapp.com/book/buy?bookId=${id}`, {\n    method: \"GET\",\n    credentials: \"include\",\n    headers: {\n      'X-XSRF-TOKEN': csrfToken\n    }\n  });\n  if (response.status !== 200) {\n    throw new Error(\"Not logged in\");\n  }\n  return response.json();\n}","map":{"version":3,"names":["csrfToken","localStorage","getItem","search","data","response","fetch","body","JSON","stringify","credentials","method","headers","status","Error","json","buy","id"],"sources":["/home/ndumicic/Desktop/web2/web2security/frontend/src/api/book.tsx"],"sourcesContent":["import {BookSearchModel} from \"../page/HomePage\";\n\nconst csrfToken = localStorage.getItem(\"csrfToken\")\n\nexport async function search(data:BookSearchModel) {\n    const response = await fetch(\"https://salty-savannah-57820.herokuapp.com/book/search\", { body: JSON.stringify(data), credentials: \"include\", method: \"POST\", headers: {\n            \"Content-Type\": \"application/json\",\n            'X-XSRF-TOKEN': csrfToken!\n        }})\n\n    if(response.status !== 200) {\n        throw new Error(\"Not logged in\");\n    }\n\n    return response.json();\n}\n\nexport async function buy(id:number) {\n    const response = await fetch(`https://salty-savannah-57820.herokuapp.com/book/buy?bookId=${id}`, { method: \"GET\" , credentials: \"include\", headers: {\n            'X-XSRF-TOKEN': csrfToken!\n        }})\n\n    if(response.status !== 200) {\n        throw new Error(\"Not logged in\");\n    }\n\n    return response.json();\n}\n"],"mappings":"AAEA,MAAMA,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;AAEnD,OAAO,eAAeC,MAAM,CAACC,IAAoB,EAAE;EAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wDAAwD,EAAE;IAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;IAAEM,WAAW,EAAE,SAAS;IAAEC,MAAM,EAAE,MAAM;IAAEC,OAAO,EAAE;MAC9J,cAAc,EAAE,kBAAkB;MAClC,cAAc,EAAEZ;IACpB;EAAC,CAAC,CAAC;EAEP,IAAGK,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;IACxB,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;EACpC;EAEA,OAAOT,QAAQ,CAACU,IAAI,EAAE;AAC1B;AAEA,OAAO,eAAeC,GAAG,CAACC,EAAS,EAAE;EACjC,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAE,8DAA6DW,EAAG,EAAC,EAAE;IAAEN,MAAM,EAAE,KAAK;IAAGD,WAAW,EAAE,SAAS;IAAEE,OAAO,EAAE;MAC5I,cAAc,EAAEZ;IACpB;EAAC,CAAC,CAAC;EAEP,IAAGK,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;IACxB,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;EACpC;EAEA,OAAOT,QAAQ,CAACU,IAAI,EAAE;AAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}