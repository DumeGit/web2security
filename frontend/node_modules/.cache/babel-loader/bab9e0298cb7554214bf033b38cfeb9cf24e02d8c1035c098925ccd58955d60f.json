{"ast":null,"code":"const csrfToken = localStorage.getItem(\"csrfToken\");\nexport async function login(data) {\n  debugger;\n  const response = await fetch(\"http://localhost:8080/auth/login\", {\n    body: JSON.stringify(data),\n    credentials: \"include\",\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'X-XSRF-TOKEN': csrfToken\n    }\n  });\n  if (response.status !== 200) {\n    throw new Error(\"Not logged in\");\n  }\n  return response.json();\n}\nexport async function getCurrentUser() {\n  const response = await fetch(\"http://localhost:8080/auth/user\", {\n    credentials: \"include\"\n  });\n  if (response.status !== 200) {\n    throw new Error(\"Not logged in\");\n  }\n  return response.json();\n}\nexport async function logout() {\n  return fetch(\"http://localhost:8080/auth/logout\", {\n    credentials: \"include\",\n    method: \"GET\"\n  });\n}\nexport async function getCsrf() {\n  let response = await fetch(\"http://localhost:8080/csrf\", {\n    credentials: \"include\"\n  });\n  return response.json();\n}","map":{"version":3,"names":["csrfToken","localStorage","getItem","login","data","response","fetch","body","JSON","stringify","credentials","method","headers","status","Error","json","getCurrentUser","logout","getCsrf"],"sources":["/home/ndumicic/Desktop/web2/web2security/frontend/src/api/auth.tsx"],"sourcesContent":["import {UserLogin} from \"../model/UserLogin\";\n\nconst csrfToken = localStorage.getItem(\"csrfToken\")\n\nexport async function login(data: UserLogin) {\n    debugger;\n    const response = await fetch(\"http://localhost:8080/auth/login\", { body: JSON.stringify(data), credentials: \"include\", method: \"POST\", headers: {\n            \"Content-Type\": \"application/json\",\n            'X-XSRF-TOKEN': csrfToken!\n        }})\n\n    if(response.status !== 200) {\n        throw new Error(\"Not logged in\");\n    }\n\n    return response.json();\n}\n\nexport async function getCurrentUser(): Promise<any> {\n    const response = await fetch(\"http://localhost:8080/auth/user\", { credentials: \"include\" });\n\n    if(response.status !== 200) {\n        throw new Error(\"Not logged in\");\n    }\n    return response.json();\n}\n\nexport async function logout(): Promise<Response> {\n    return fetch(\"http://localhost:8080/auth/logout\", {credentials: \"include\", method: \"GET\"})\n}\n\nexport async function getCsrf() {\n    let response = await fetch(\"http://localhost:8080/csrf\", {credentials: \"include\"})\n    return response.json();\n}\n"],"mappings":"AAEA,MAAMA,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;AAEnD,OAAO,eAAeC,KAAK,CAACC,IAAe,EAAE;EACzC;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;IAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;IAAEM,WAAW,EAAE,SAAS;IAAEC,MAAM,EAAE,MAAM;IAAEC,OAAO,EAAE;MACxI,cAAc,EAAE,kBAAkB;MAClC,cAAc,EAAEZ;IACpB;EAAC,CAAC,CAAC;EAEP,IAAGK,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;IACxB,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;EACpC;EAEA,OAAOT,QAAQ,CAACU,IAAI,EAAE;AAC1B;AAEA,OAAO,eAAeC,cAAc,GAAiB;EACjD,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;IAAEI,WAAW,EAAE;EAAU,CAAC,CAAC;EAE3F,IAAGL,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;IACxB,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;EACpC;EACA,OAAOT,QAAQ,CAACU,IAAI,EAAE;AAC1B;AAEA,OAAO,eAAeE,MAAM,GAAsB;EAC9C,OAAOX,KAAK,CAAC,mCAAmC,EAAE;IAACI,WAAW,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAK,CAAC,CAAC;AAC9F;AAEA,OAAO,eAAeO,OAAO,GAAG;EAC5B,IAAIb,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;IAACI,WAAW,EAAE;EAAS,CAAC,CAAC;EAClF,OAAOL,QAAQ,CAACU,IAAI,EAAE;AAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}